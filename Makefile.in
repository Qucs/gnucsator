# Makefile for gnucap-qucs
# (c) Felix Salfelder 2015-20
# License: GPLv3+
#
# TODO: use autotools (or so) instead, and only use Make1.

PACKAGE_NAME = gnucap-qucs
PACKAGE_VERSION = 0.0.0

GNUCAP_CONF = $(shell which gnucap-conf$(SUFFIX))

# BUG: use tests/Make1
TESTFILES_PAT = \
  tests/*.gc \
  tests/*.gc.ref \
  tests/*.gc.out

include Make1
include Make2

ifneq ($(GNUCAP_CONF),)
    $(info asking $(GNUCAP_CONF))
	 # TODO. complete the move to configure.
    CXX             = $(shell $(GNUCAP_CONF) --cxx)   # c++
    GNUCAP_CPPFLAGS = $(shell $(GNUCAP_CONF) --cppflags) -DADD_VERSION
	GNUCAP_LDFLAGS  = $(shell $(GNUCAP_CONF) --ldflags)
    GNUCAP_CXXFLAGS = $(shell $(GNUCAP_CONF) --cxxflags)

	GNUCAP_LIBS        = @libs@
	GNUCAP_PLUGPATH    = @plugpath@
	GNUCAP_EXEC_PREFIX = @prefix@
	GNUCAP_PKGLIBDIR   = @pkglibdir@
	GNUCSATOR_PKGLIBDIR=${GNUCAP_PKGLIBDIR}/qucs
	GNUCAP_SYSCONFDIR  = @sysconfdir@
else
    $(error no gnucap-conf, this will not work)
endif

ifneq ($(PREFIX),)
    $(info prefix is ${PREFIX}. overriding some)
	 GNUCAP_LIBDIR = ${PREFIX}/lib
	 GNUCSATOR_PKGLIBDIR = ${GNUCAP_LIBDIR}/gnucap/qucs
endif

# TODO: what do we get from gnucap-conf and why?
# GNUCAP_CXXFLAGS+= -shared

# for now. does it make sense?
GNUCSATOR_CXXFLAGS = -std=c++11 -fPIC $(GNUCAP_CXXFLAGS) $(CXXFLAGS)

# TODO: is this platform dependent?
GSL_LIBS = -lgsl -lblas -lgslcblas

EXECUTABLES = \
  ${bin_PROGRAMS} ${dist_bin_SCRIPTS} ${contrib_bin_SCRIPTS}

all:

main.o: gnucsator.cc
	$(CXX) $(GNUCSATOR_CXXFLAGS) -DHAVE_CONFIG $(CPPFLAGS) $(GNUCAP_CPPFLAGS) $(GNUCSATOR_CPPFLAGS) -fPIC -c -o $@ $<

main.o: config.h

gnucsator: main.o
	$(CXX) $(GNUCSATOR_CXXFLAGS) -o $@ $< $(GNUCAP_LDFLAGS) ${GNUCAP_LIBS}

# QUCS_DEVS = opamp cccs
# QUCS_DEVS_SO = $(QUCS_DEVS:%=d_qucs_%.so)

# LDLIBS =

GNUCSATOR_CPPFLAGS+= -DDEFAULT_SYSTEMSTARTPATH=\"${GNUCAP_SYSCONFDIR}\"
GNUCSATOR_CPPFLAGS+= -DUSERSTARTFILE=\"gnucap_rc\"
GNUCSATOR_CPPFLAGS+= -DUSERSTARTPATH=\".\"
GNUCSATOR_CPPFLAGS+= -DDEFAULT_PLUGINS=\"gnucap-default-plugins.so\"
GNUCSATOR_CPPFLAGS+= -DDEFAULT_LANGUAGE=\"acs\"

QUCS_PLUGINS = ${PLUGIN_CC:%.cc=%.so}

all: $(QUCS_PLUGINS) ${EXECUTABLES}

CLEANFILES = $(QUCS_PLUGINS) *.o *~

d_poly_g_uf.so: u_parameter_uf.h m_mvpoly.h

lang_qucs.so: l_qucs.h
cmd_wrapper.so: l_qucs.h

dbg:
	echo $(QUCS_DEVS_SO)

$(QUCS_DEVS_SO): d_qucs_%.so: qucs_wrapper.cc
	$(CXX) $(GNUCSATOR_CXXFLAGS) $(GNUCAP_CXXFLAGS) -DQUCS_DEVICE=$* \
		$(CPPFLAGS) $(QUCS_CPPFLAGS) $(GNUCAP_CPPFLAGS) -o $@ \
		$< $(QUCS_LDFLAGS) $(QUCS_LIBS) \
	$(LDLIBS)

%.so : %.cc
	$(CXX) $(GNUCSATOR_CXXFLAGS) $(CPPFLAGS) $(GNUCAP_CPPFLAGS) -o $@ $< $(LDLIBS) -shared

${QUCS_PLUGINS}: %.so: %.cc

gncp: main.o config.h
	$(CXX) $(GNUCSATOR_CXXFLAGS) $(CPPFLAGS) $(GNUCAP_CPPFLAGS) -o $@ $< $(GNUCAP_LDFLAGS) $(LIBS)

s_sparam.so: LDLIBS=${GSL_LIBS}

QUCS_INCLUDEDIR = $(QUCS_PREFIX)/include
QUCS_CPPFLAGS = -I$(QUCS_INCLUDEDIR) -I$(QUCS_INCLUDEDIR)/qucs-core
QUCS_LDFLAGS = -L$(QUCS_PREFIX)/lib
QUCS_LIBS = -lqucs

GNUCSATOR_RC = gnucsator.rc
PKGINCLUDEDIR = @PKGINCLUDEDIR@

install: $(QUCS_PLUGINS) gnucsator.sh gnucsator
	-install -d $(DESTDIR)$(GNUCSATOR_PKGLIBDIR)
	install $(QUCS_PLUGINS) $(DESTDIR)$(GNUCSATOR_PKGLIBDIR)

	-install -d $(DESTDIR)$(GNUCAP_EXEC_PREFIX)/bin
	install $(EXECUTABLES) $(DESTDIR)$(GNUCAP_EXEC_PREFIX)/bin

	-install -d $(DESTDIR)$(GNUCAP_SYSCONFDIR)
	install $(GNUCSATOR_RC) $(DESTDIR)$(GNUCAP_SYSCONFDIR)

	${MAKE} -C include install PKGINCLUDEDIR=${PKGINCLUDEDIR}

uninstall:
	(cd $(GNUCAP_LIBDIR)/qucs ; rm $(QUCS_PLUGINS))

clean :
	rm -f $(CLEANFILES)

info:
	@echo GNUCAP_PKGLIBDIR: ${GNUCAP_PKGLIBDIR}
	@echo GNUCAP_PLUGPATH: ${GNUCAP_PLUGPATH}

distclean: clean
	rm Make.override

# BUG: the rule for config.h is missing.
define NOTICE
#THIS FILE IS AUTOMATICALLY GENERATED
endef

Make2:
	[ -e $@ ] || echo "# here you may override settings\n#CPPFLAGS = -DDO_TRACE -DTRACE_UNTESTED\n#CXXFLAGS = -O0 -g3" > $@

check: all
	$(MAKE) -C tests check GNUCAP_PLUGPATH=${GNUCAP_PLUGPATH} \
		GNUCAP_PKGLIBDIR=${GNUCAP_PKGLIBDIR}

DIST_FILES = \
	Make1 Makefile.in \
	${bin_PROGRAMS:%=%.cc} \
	${dist_bin_SCRIPTS} \
	${noinst_HEADERS} \
	${EXTRA_DIST} \
	${PLUGIN_CC} \
	${TEST_EXTRA_DIST}

dist:
	tar --transform "s|^|${PACKAGE_NAME}-${PACKAGE_VERSION}/|" \
		-cjf ${PACKAGE_NAME}-${PACKAGE_VERSION}.bz2 ${DIST_FILES}
