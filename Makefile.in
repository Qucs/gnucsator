GNUCAP_CONF = $(shell which gnucap-conf$(SUFFIX))

include Make2

ifneq ($(GNUCAP_CONF),)
    $(info asking $(GNUCAP_CONF))
    CXX = $(shell $(GNUCAP_CONF) --cxx)
    GNUCAP_CPPFLAGS = $(shell $(GNUCAP_CONF) --cppflags) -DADD_VERSION
	 GNUCAP_PLUGPATH = @plugpath@
    GNUCAP_CXXFLAGS = $(shell $(GNUCAP_CONF) --cxxflags)
	 GNUCAP_LIBS = $(shell $(GNUCAP_CONF) --libs)
	 GNUCAP_EXEC_PREFIX = @prefix@
	 GNUCAP_PKGLIBDIR = @pkglibdir@
	 GNUCSATOR_PKGLIBDIR=${GNUCAP_PKGLIBDIR}/qucs
	 GNUCAP_SYSCONFDIR = @sysconfdir@
else
    $(error no gnucap-conf, this will not work)
endif

ifneq ($(PREFIX),)
    $(info prefix is ${PREFIX}. overriding some)
	 GNUCAP_LIBDIR = ${PREFIX}/lib
	 GNUCSATOR_PKGLIBDIR = ${GNUCAP_LIBDIR}/gnucap/qucs
endif

GNUCAP_CXXFLAGS+= -fPIC -shared -Wall
EXECUTABLES = \
	gnucsator.sh \
	gnucsator \
	net2verilog.sh

all:

main.o: main.cc
	$(CXX) $(CXXFLAGS) $(GNUCAP_CXXFLAGS) -DHAVE_CONFIG $(CPPFLAGS) $(GNUCAP_CPPFLAGS) $(GNUCSATOR_CPPFLAGS) -fPIC -shared -c -o $@ $<

gnucsator: main.o config.h
	$(CXX) $(CXXFLAGS) -o $@ $< $(GNUCAP_LDFLAGS) ${GNUCAP_LIBS}

# QUCS_DEVS = opamp cccs
QUCS_DEVS_SO = $(QUCS_DEVS:%=d_qucs_%.so)

# LDLIBS =

GNUCSATOR_CPPFLAGS+= -DDEFAULT_SYSTEMSTARTPATH=\"${GNUCAP_SYSCONFDIR}\"
GNUCSATOR_CPPFLAGS+= -DUSERSTARTFILE=\"gnucap_rc\"
GNUCSATOR_CPPFLAGS+= -DUSERSTARTPATH=\".\"
GNUCSATOR_CPPFLAGS+= -DDEFAULT_PLUGINS=\"gnucap-default-plugins.so\"
GNUCSATOR_CPPFLAGS+= -DDEFAULT_LANGUAGE=\"acs\"

QUCS_PLUGINS = \
	$(QUCS_DEVS_SO) \
	lang_qucs.so \
	lang_verilog.so \
	c_hide.so \
	c_list.so \
	c_uninst.so \
	c_vpp.so \
	c_include.so \
	d_eqn.so \
	d_poly_g_uf.so \
	bm_poly.so \
	d_gpolyk_wrap.so \
	d_probe.so \
	functions.so \
	bm_value.so \
	bm_trivial.so \
	bm_wrapper.so \
	cmd_wrapper.so \
	s_dc.so \
	s_sparam.so

all: $(QUCS_PLUGINS) ${EXECUTABLES}

CLEANFILES = $(QUCS_PLUGINS) *.o *~ gnucsator.sh

d_poly_g_uf.so: u_parameter_uf.h m_mvpoly.h

lang_qucs.so: l_qucs.h
cmd_wrapper.so: l_qucs.h

dbg:
	echo $(QUCS_DEVS_SO)

$(QUCS_DEVS_SO): d_qucs_%.so: qucs_wrapper.cc
	$(CXX) -std=c++11 $(CXXFLAGS) $(GNUCAP_CXXFLAGS) -DQUCS_DEVICE=$* \
		$(CPPFLAGS) $(QUCS_CPPFLAGS) $(GNUCAP_CPPFLAGS) -o $@ \
		$< $(QUCS_LDFLAGS) $(QUCS_LIBS) \
	$(LDLIBS)

%.so : %.cc
	$(CXX) $(CXXFLAGS) $(GNUCAP_CXXFLAGS) $(CPPFLAGS) $(GNUCAP_CPPFLAGS) -o $@ $< $(LDLIBS)

${QUCS_PLUGINS}: %.so: %.cc

gncp: main.o config.h
	$(CXX) $(CXXFLAGS) $(GNUCAP_CXXFLAGS) $(CPPFLAGS) $(GNUCAP_CPPFLAGS) -o $@ $< $(GNUCAP_LDFLAGS) $(LIBS)

s_sparam.so: LDLIBS=-lgsl -lblas

d_eqn.so: CXXFLAGS+=-std=c++11
cmd_wrapper.so: CXXFLAGS+=-std=c++11

QUCS_INCLUDEDIR = $(QUCS_PREFIX)/include
QUCS_CPPFLAGS = -I$(QUCS_INCLUDEDIR) -I$(QUCS_INCLUDEDIR)/qucs-core
QUCS_LDFLAGS = -L$(QUCS_PREFIX)/lib
QUCS_LIBS = -lqucs

GNUCSATOR_RC=gnucsator.rc
PKGINCLUDEDIR=@PKGINCLUDEDIR@

install: $(QUCS_PLUGINS) gnucsator.sh gnucsator
	-install -d $(DESTDIR)$(GNUCSATOR_PKGLIBDIR)
	install $(QUCS_PLUGINS) $(DESTDIR)$(GNUCSATOR_PKGLIBDIR)

	-install -d $(DESTDIR)$(GNUCAP_EXEC_PREFIX)/bin
	install $(EXECUTABLES) $(DESTDIR)$(GNUCAP_EXEC_PREFIX)/bin

	-install -d $(DESTDIR)$(GNUCAP_SYSCONFDIR)
	install $(GNUCSATOR_RC) $(DESTDIR)$(GNUCAP_SYSCONFDIR)

	${MAKE} -C include install PKGINCLUDEDIR=${PKGINCLUDEDIR}

uninstall:
	(cd $(GNUCAP_LIBDIR)/qucs ; rm $(QUCS_PLUGINS))

clean :
	rm -f $(CLEANFILES)

info:
	@echo GNUCAP_PKGLIBDIR: ${GNUCAP_PKGLIBDIR}
	@echo GNUCAP_PLUGPATH: ${GNUCAP_PLUGPATH}

distclean: clean
	rm Make.override

define NOTICE
#THIS FILE IS AUTOMATICALLY GENERATED
endef

Make2:
	[ -e $@ ] || echo "# here you may override settings" > $@

check: all
	$(MAKE) -C tests check GNUCAP_PLUGPATH=${GNUCAP_PLUGPATH} \
		GNUCAP_PKGLIBDIR=${GNUCAP_PKGLIBDIR}
